#!/bin/bash

# Check if yt-dlp is installed
if ! command -v yt-dlp &>/dev/null; then
	echo "yt-dlp could not be found. Please install it first."
	exit
fi

# Check if jq is installed
if ! command -v jq &>/dev/null; then
	echo "jq could not be found. Please install it first."
	exit 1
fi

# Check if a video URL is provided
if [ -z "$1" ]; then
	echo "No video URL provided. Usage: ./download_video <video_url>"
	exit
fi

VIDEO_URL="$1"
# YOUTUBE_DIR="/mnt/d/data/media/videos/youtube"
YOUTUBE_DIR="/tmp/yt"
CHANNEL_DIR="$YOUTUBE_DIR/%(uploader)s"
FORMAT="bestvideo[height<=480]+bestaudio/bestvideo[height<=720]+bestaudio/bestvideo[height<=360]+bestaudio"

if [[ $VIDEO_URL =~ /playlist\?list= ]]; then
	# Fetch metadata using yt-dlp
	METADATA=$(yt-dlp --print-json --flat-playlist "$VIDEO_URL")
	UPLOADER="$(echo "$METADATA" | jq -r '.uploader' | head -1)"
	PLAYLIST_TITLE="$(echo "$METADATA" | jq -r '.playlist_title' | head -1)"
	# Prefix playlist index with "_" separator, but only if it is available
	OUTPUT_DIR="$CHANNEL_DIR/%(playlist_title)s"
	FILENAME="%(playlist_index&{}-|)s%(title)s.%(ext)s"
else
	OUTPUT_DIR="$CHANNEL_DIR/%(title)s"
	FILENAME="%(title)s.%(ext)s"
	PLAYLIST_OPTIONS=""
fi

OUTPUT_FILENAME="$OUTPUT_DIR/$FILENAME"
THUMBNAIL_PATH="thumbnail:$OUTPUT_DIR/thumbnails/$FILENAME"
SUBTITLE_PATH="subtitle:$OUTPUT_DIR/subtitles/$FILENAME"
DESCRIPTION="description:$OUTPUT_DIR/descriptions/$FILENAME"

yt-dlp \
	-f "$FORMAT" \
	-o "$OUTPUT_FILENAME" \
	-o "$THUMBNAIL_PATH" \
	-o "$SUBTITLE_PATH" \
	-o "$DESCRIPTION" \
	--embed-metadata \
	--embed-chapters \
	--embed-subs \
	--embed-thumbnail \
	--write-description \
	--write-thumbnail \
	--write-subs \
	--write-auto-subs \
	--sub-lang en,ar \
	--convert-subs srt \
	--convert-thumbnails png \
	--concurrent-fragments 3 \
	--merge-output-format mp4 \
	--download-archive archive.log \
	"$VIDEO_URL"

# --restrict-filenames \
